{"version":3,"file":"static/js/922.62e3152f.chunk.js","mappings":"8PAEaA,EAAOC,EAAAA,EAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iQAYlBC,EAAYH,EAAAA,EAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uDAKxBG,EAAYL,EAAAA,EAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oDAKpBK,EAAYP,EAAAA,EAAAA,MAAYQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iTAgBxBO,EAAUT,EAAAA,EAAAA,OAAaU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,2c,wCCtCvBS,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAC/CC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAO,EACrCC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAM,EAC5CC,EAAkB,SAAAP,GAAK,OAAIA,EAAMC,SAASO,SAAU,EAEpDC,GAAyBC,EAAAA,EAAAA,IACpC,CAACX,EAAgBI,IACjB,SAACF,EAAUG,GACT,OAAKA,EAEEH,EAASG,QAAO,SAAAO,GAAO,OAAAA,EAAJC,KACnBC,cAAcC,SAASV,EAAOS,cAAc,IAH/BZ,CAKtB,I,SCRWc,EAAc,WACzB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BJ,EAAIM,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBrB,GAAWwB,EAAAA,EAAAA,IAAY1B,GACvB2B,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAEE,cAAlBnB,EAAIkB,EAAJlB,KAAMoB,EAAKF,EAALE,MACL,SAATpB,EAAkBQ,EAAQY,GAASR,EAAUQ,EAC/C,EAgCE,OACQC,EAAAA,EAAAA,MAAC9C,EAAI,CAAC+C,SA1BK,SAAAL,GACnBA,EAAEM,iBAEJ,IAAMC,EAAkBnC,EAASoC,MAAK,SAAAC,GAAO,OAAIA,EAAQ1B,OAASA,CAAI,IAChE2B,EAAwBtC,EAASoC,MAAK,SAAAC,GAAO,OAAIA,EAAQf,SAAWA,CAAM,IAEhF,GAAIa,EACFI,MAAM,GAADC,OAAI7B,EAAI,kCAIf,GAAI2B,EACFC,MAAM,iDADR,CAKA,IAAMF,EAAU,CACdI,IAAIC,EAAAA,EAAAA,MACJ/B,KAAAA,EACAW,OAAAA,GAEAG,GAASkB,EAAAA,EAAAA,IAAWN,IAzBpBlB,EAAQ,IACRI,EAAU,GAiBZ,CASA,EAGuCqB,SAAA,EACzBZ,EAAAA,EAAAA,MAAC1C,EAAS,CAAAsD,SAAA,EACNC,EAAAA,EAAAA,KAACrD,EAAS,CAAAoD,SAAC,UACXC,EAAAA,EAAAA,KAACnD,EAAS,CACVoD,SAAUnB,EACVoB,KAAK,OACLhB,MAAOpB,EACPA,KAAK,OACLqC,aAAa,MACbC,QAAQ,wHACRC,MAAM,yIACNC,UAAQ,QAGZnB,EAAAA,EAAAA,MAAC1C,EAAS,CAAAsD,SAAA,EACNC,EAAAA,EAAAA,KAACrD,EAAS,CAAAoD,SAAC,YACXC,EAAAA,EAAAA,KAACnD,EAAS,CACVoD,SAAUnB,EACVoB,KAAK,MACLhB,MAAOT,EACPX,KAAK,SACLqC,aAAa,MACbC,QAAQ,yGACRC,MAAM,+FACNC,UAAQ,QAGZN,EAAAA,EAAAA,KAACjD,EAAO,CAACmD,KAAK,SAAQH,SAAC,kBAGvC,E,SC7EaQ,EAAcjE,EAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4BAI1BgE,EAAclE,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mDAKtBiE,EAAcnE,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,uR,UCL1BkE,EAAS,WACpB,IAAMpD,GAASqB,EAAAA,EAAAA,IAAYtB,GACrBuB,GAAWC,EAAAA,EAAAA,MAMjB,OACEmB,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAZ,UACEZ,EAAAA,EAAAA,MAACoB,EAAW,CAAAR,SAAA,EACVC,EAAAA,EAAAA,KAACQ,EAAW,CAAAT,SAAC,2BACbC,EAAAA,EAAAA,KAACS,EAAW,CAACR,SARO,SAAClB,GACzBH,GAASgC,EAAAA,EAAAA,GAAU7B,EAAE8B,OAAO3B,MAAM4B,QACpC,EAMgD5B,MAAO5B,EAAQ4C,KAAK,OAAOpC,KAAK,SAASqC,aAAa,YAIxG,ECpBaY,EAAOzE,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sCAMhBwE,EAAc1E,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+HAQvByE,EAAc3E,EAAAA,EAAAA,KAAWM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+BAIzB0E,EAAgB5E,EAAAA,EAAAA,KAAWQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+BAI3B2E,EAAa7E,EAAAA,EAAAA,OAAaU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,icClB1B4E,EAAc,WACvB,IAAMC,GAAmB1C,EAAAA,EAAAA,IAAYhB,GAC/BiB,GAAWC,EAAAA,EAAAA,OAEjByC,EAAAA,EAAAA,YAAU,WACN1C,GAAS2C,EAAAA,EAAAA,MACb,GAAG,CAAC3C,IAMN,OACMoB,EAAAA,EAAAA,KAACe,EAAI,CAAAhB,SACAsB,EAAiBG,KAAI,SAAAhC,GAClB,OACIL,EAAAA,EAAAA,MAAC6B,EAAW,CAAAjB,SAAA,EACRZ,EAAAA,EAAAA,MAAC8B,EAAW,CAAAlB,SAAA,CAAEP,EAAQ1B,KAAK,QAC3BkC,EAAAA,EAAAA,KAACkB,EAAa,CAAAnB,SAAEP,EAAQf,UACxBuB,EAAAA,EAAAA,KAACmB,EAAU,CAACjB,KAAK,SAASuB,QAAS,kBAXnC7B,EAWsDJ,EAAQI,QAVlFhB,GAAS8C,EAAAA,EAAAA,IAAc9B,IADJ,IAACA,CAWiE,EAACG,SAAC,aAHrDP,EAAQI,GAOlC,KAGZ,EC9Ba+B,EAAarF,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4d,UCAvBoF,EAAkBtF,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iHCE5BqF,EAAS,WAClB,OAAQ7B,EAAAA,EAAAA,KAAC4B,EAAe,CAAA7B,UACrBC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAS,CACjBC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,qBACEC,SAAS,EACRC,aAAc,CACjBC,OAAQ,EACdP,OAAQ,GACRQ,KAAM,EACNC,OAAQ,OACRC,SAAU,WACVC,MAAO,EACPC,IAAK,EACLX,MAAO,QAKX,ECFA,GAhBoB,WAClB,IAAMtE,GAAYiB,EAAAA,EAAAA,IAAYlB,GACxBD,GAAQmB,EAAAA,EAAAA,IAAYpB,GAC1B,OACEyC,EAAAA,EAAAA,KAAA,QAAAD,UACEZ,EAAAA,EAAAA,MAACwC,EAAU,CAAA5B,SAAA,EACTC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAC/B,EAAW,KACZ+B,EAAAA,EAAAA,KAACU,EAAM,IACNhD,IAAcF,IAASwC,EAAAA,EAAAA,KAAC6B,EAAM,KAC/B7B,EAAAA,EAAAA,KAACoB,EAAW,QAIpB,C","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/ContactPage/ContactPage.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","pages/ContactPage/ContactPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  padding: 16px;\n  border: 2px dashed #a5a2a2;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  width: 350px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormLabel = styled.label`\n  margin-bottom: 8px;\n  display: contents;\n`;\n\nexport const LabelName = styled.p`\n  font-size: 18px;\n  font-weight: 600; \n`;\n\nexport const FormInput = styled.input`\nheight: 24px;\nbackground: transparent;\noutline: none;\nborder: 1px solid black;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  :focus,\n  :hover {\n    outline: none;\n    border-color: #6b93b7;\n  }\n`;\n\nexport const FormBtn = styled.button`\nborder-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  margin-top: 16px;\n  color: black;\n  font-size: 16px;\n  height: 30px;\n  background-color: #fde6c1;\n  border: none;\n  cursor: pointer;\n  padding: 1px 10px;\n  width: 150px;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: white;\n    background-color: #6b93b7;\n  }\n`;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items; \nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter], \n  (contacts, filter) => {\n    if (!filter) return contacts;\n    \n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import { useState } from 'react';\nimport { Form, FormLabel, LabelName, FormInput, FormBtn } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { nanoid } from 'nanoid';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n  const existingContact = contacts.find(contact => contact.name === name);\n  const existingContactNumber = contacts.find(contact => contact.number === number);\n\n  if (existingContact) {\n    alert(`${name} is already in contacts.`);\n    return;\n  };\n\n  if (existingContactNumber) {\n    alert('This phone number is already in contacts.');\n    return;\n  };\n\n  const contact = {\n    id: nanoid(),\n    name,\n    number,\n  };\n    dispatch(addContact(contact));\n    resetForm();\n  };\n\n    return (\n            <Form onSubmit={handleSubmit}>\n                <FormLabel>\n                    <LabelName>Name</LabelName>\n                    <FormInput\n                    onChange={handleChange}\n                    type=\"text\"\n                    value={name}\n                    name=\"name\"\n                    autoComplete=\"off\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' ][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    />\n                </FormLabel>\n                <FormLabel>\n                    <LabelName>Number</LabelName>\n                    <FormInput\n                    onChange={handleChange}\n                    type=\"tel\"\n                    value={number}\n                    name=\"number\"\n                    autoComplete=\"off\"\n                    pattern=\"\\+?\\d{1,4}?[\\-\\.\\s]?\\(?\\d{1,3}?\\)?[\\-\\.\\s]?\\d{1,4}[\\-\\.\\s]?\\d{1,4}[\\-\\.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    />\n                </FormLabel>\n                <FormBtn type=\"submit\">Add contact</FormBtn>\n            </Form>\n      )\n};\n","import styled from \"styled-components\";\n\nexport const FilterLabel = styled.label`\n  display: grid;\n`;\n\nexport const FilterTitle = styled.p`\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nexport const FilterInput = styled.input`\nheight: 24px;\nbackground: transparent;\noutline: none;\nborder: 1px solid black;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\nwidth: 350px;\n:focus {\n    outline: none;\n  }\n`;","import { FilterLabel, FilterTitle, FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleInputChange = (e) => {\n    dispatch(setFilter(e.target.value.trim()));\n  };\n\n  return (\n    <>\n      <FilterLabel>\n        <FilterTitle>Find contacts by name</FilterTitle>\n        <FilterInput onChange={handleInputChange} value={filter} type=\"text\" name=\"filter\" autoComplete=\"off\"/>\n      </FilterLabel>\n    </>\n  );\n};\n\n\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\nmargin: 12px;\npadding: 0;\n`;\n\n\nexport const ContactItem = styled.li`\n    display: flex;\n    gap: 20px;\n    width: 350px;\n    justify-content: space-between;\n    margin-bottom: 8px;\n`;\n\nexport const ContactName = styled.span`\n  font-weight: 500;\n`;\n\nexport const ContactNumber = styled.span`\n  font-weight: 500;\n`;\n\nexport const ContactBtn = styled.button`\nfont-size: 16px;\nheight: 25px;\ncursor: pointer;\n  justify-content: flex-end;\n  background-color: #fde6c1;\n  color: black;\n  border: none;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  padding: 1px 10px;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  \n  :hover,\n  :focus {\n    color: white;\n    background-color: #6b93b7;\n  }\n`;","import { ContactItem, ContactName, ContactNumber, ContactBtn, List } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts} from '../../redux/contacts/selectors';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n    const filteredContacts = useSelector(selectFilteredContacts);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n  const handleDelete = (id) => {\n    dispatch(deleteContact(id));\n  };\n    \n  return (\n        <List>\n            {filteredContacts.map(contact => {\n                return (\n                    <ContactItem key={contact.id}>\n                        <ContactName>{contact.name}:</ContactName>\n                        <ContactNumber>{contact.number}</ContactNumber>\n                        <ContactBtn type=\"button\" onClick={() => handleDelete(contact.id)}>\n                           Delete\n                        </ContactBtn>\n                    </ContactItem>)\n            })}\n        </List>\n    )\n};\n","import styled from '@emotion/styled';\n\nexport const ContactDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 85%;\n  margin: 20px auto;\n  color: black;\n  background-color: #f2cc5a;\n  padding: 20px 10px;\n\n  border: 2px dashed #a5a2a2;\n  border-radius: 4%;\n\n  @media screen and (min-width: 760px) {\nwidth: 440px;\npadding: 20px;\n\t}\n\t@media screen and (min-width: 1200px) {\n    padding: 40px 80px 100px 80px;\n    width: 500px;\n    margin: 30px auto;\n\t}\n`;","import styled from \"styled-components\";\n\nexport const LoaderContainer = styled.div`\n    bottom: 0;\n    left: 0;\n    overflow: hidden;\n    position: fixed;\n    right: 0;\n    top: 0;\n`;","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\n\nexport const Loader = () => {\n    return (<LoaderContainer>\n       <ThreeDots \nheight=\"55\" \nwidth=\"55\" \nradius=\"9\"\ncolor=\"black\" \nariaLabel=\"three-dots-loading\"\n            visible={true}\n             wrapperStyle={{\n          bottom: 0,\n    height: 34,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    width: 100,\n        }}\n        />\n        </LoaderContainer>\n    )\n};","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter'; \nimport { ContactList } from 'components/ContactList/ContactList'; \nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport { ContactDiv } from './ContactPage.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst ContactPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return (\n    <main>\n      <ContactDiv>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <Filter />\n        {isLoading && !error && <Loader/>}\n        <ContactList />\n      </ContactDiv>\n    </main>\n  );\n};\n\nexport default ContactPage;"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","FormLabel","_templateObject2","LabelName","_templateObject3","FormInput","_templateObject4","FormBtn","_templateObject5","selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","_e$currentTarget","currentTarget","value","_jsxs","onSubmit","preventDefault","existingContact","find","contact","existingContactNumber","alert","concat","id","nanoid","addContact","children","_jsx","onChange","type","autoComplete","pattern","title","required","FilterLabel","FilterTitle","FilterInput","Filter","_Fragment","setFilter","target","trim","List","ContactItem","ContactName","ContactNumber","ContactBtn","ContactList","filteredContacts","useEffect","fetchContacts","map","onClick","deleteContact","ContactDiv","LoaderContainer","Loader","ThreeDots","height","width","radius","color","ariaLabel","visible","wrapperStyle","bottom","left","margin","position","right","top"],"sourceRoot":""}